Parameters:

    VpcCIDR:
      Type: String
      Default: 10.0.0.0/16

    PublicSubnet1CIDR:
      Type: String
  
    PublicSubnet2CIDR:
      Type: String
    
    PrivateSubnet1CIDR:
      Type: String
      
    PrivateSubnet2CIDR:
      Type: String
    
    EnvironmentName:  
      Type: String
       
Resources:  
    MyVPC:
      Type: AWS::EC2::VPC
      Properties:
          CidrBlock: !Ref VpcCIDR
          EnableDnsHostnames: true
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName}-VPC 
    IGW:
      Type: AWS::EC2::InternetGateway
      Properties:
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName}-IGW

    AttachIGW:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
          InternetGatewayId: !Ref IGW
          VpcId: !Ref MyVPC

    PublicSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [0, !GetAZs '']
          VpcId: !Ref MyVPC 
          CidrBlock: !Ref PublicSubnet1CIDR
          MapPublicIpOnLaunch: true
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
    PublicSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
          AvailabilityZone: !Select [1, !GetAZs '']
          VpcId: !Ref MyVPC 
          CidrBlock: !Ref PublicSubnet2CIDR
          MapPublicIpOnLaunch: true
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
    PrivateSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref MyVPC
          AvailabilityZone: !Select [0, !GetAZs '']
          CidrBlock: !Ref PrivateSubnet1CIDR
          MapPublicIpOnLaunch: false
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
    PrivateSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
          VpcId: !Ref MyVPC
          AvailabilityZone: !Select [1, !GetAZs '']
          CidrBlock: !Ref PrivateSubnet2CIDR
          MapPublicIpOnLaunch: false
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
    EIP1:
      Type: AWS::EC2::EIP
      DependsOn:  AttachIGW
      Properties:
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} EIP1
    EIP2:
      Type: AWS::EC2::EIP
      DependsOn:  AttachIGW
      Properties:
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} EIP2
    
    Nat1GW:
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt EIP1.AllocationId
          SubnetId: !Ref PublicSubnet1
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} NAT1
    
    Nat2GW:
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt EIP2.AllocationId
          SubnetId: !Ref PublicSubnet2
          Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} NAT2
    

    PublicRouteTable:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref MyVPC
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Routes

    DefaultPublicRoute: 
      Type: AWS::EC2::Route
      Properties: 
          RouteTableId: !Ref PublicRouteTable
          DestinationCidrBlock: 0.0.0.0/0
          GatewayId: !Ref IGW

    PublicSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PublicRouteTable
          SubnetId: !Ref PublicSubnet2

    PrivateRouteTable1:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref MyVPC
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    PrivateRouteTable2:
      Type: AWS::EC2::RouteTable
      Properties: 
          VpcId: !Ref MyVPC
          Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Routes (AZ2)


    DefaultPrivateRoute1:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref Nat1GW
        
    DefaultPrivateRoute2:
      Type: AWS::EC2::Route
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          DestinationCidrBlock: 0.0.0.0/0
          NatGatewayId: !Ref Nat2GW

    PrivateSubnet1RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable1
          SubnetId: !Ref PrivateSubnet1
    
    PrivateSubnet2RouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
          RouteTableId: !Ref PrivateRouteTable2
          SubnetId: !Ref PrivateSubnet2

Outputs:


    MyVPC:
      Description: A reference to the created VPC
      Value: !Ref MyVPC
      Export:
          Name: !Sub ${EnvironmentName}-VPCID
    PublicSubnet1:
      Description: Get public subnet ID
      Value: !Ref PublicSubnet1
      Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2:
      Description: Get public subnet ID
      Value: !Ref PublicSubnet2
      Export:
          Name: !Sub ${EnvironmentName}-PUB2-SN

    PrivateSubnet1:
      Description: Get Private subnet ID
      Value: !Ref PrivateSubnet1
      Export:
          Name: !Sub ${EnvironmentName}-PRI1-SN
    
    PrivateSubnet2:
      Description: Get Private subnet ID
      Value: !Ref PrivateSubnet2
      Export:
          Name: !Sub ${EnvironmentName}-PRI2-SN

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS
    
    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS
            
